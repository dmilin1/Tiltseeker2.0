[{"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\index.js":"1","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\App.js":"2","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\serviceWorker.js":"3","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\constants.js":"4","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\components\\Navbar.js":"5","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\BestBans.js":"6","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\About.js":"7","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Home.js":"8","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\DesktopApp.js":"9","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Donate.js":"10","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Tiltseek.js":"11","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\CompChecker.js":"12","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\components\\ProgressBar.js":"13","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\Styling.js":"14","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\utils\\WinRateCalc.js":"15"},{"size":452,"mtime":1577920082295,"results":"16","hashOfConfig":"17"},{"size":4398,"mtime":1615526161446,"results":"18","hashOfConfig":"17"},{"size":4951,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":475,"mtime":1581392094891,"results":"20","hashOfConfig":"17"},{"size":3560,"mtime":1596338433863,"results":"21","hashOfConfig":"17"},{"size":8607,"mtime":1611799822341,"results":"22","hashOfConfig":"17"},{"size":3742,"mtime":1593231911785,"results":"23","hashOfConfig":"17"},{"size":6048,"mtime":1599341636431,"results":"24","hashOfConfig":"17"},{"size":2222,"mtime":1616566021402,"results":"25","hashOfConfig":"17"},{"size":8702,"mtime":1613202264060,"results":"26","hashOfConfig":"17"},{"size":27911,"mtime":1616566354136,"results":"27","hashOfConfig":"17"},{"size":8775,"mtime":1596338984383,"results":"28","hashOfConfig":"17"},{"size":1079,"mtime":1579950739611,"results":"29","hashOfConfig":"17"},{"size":3841,"mtime":1599341529229,"results":"30","hashOfConfig":"17"},{"size":4017,"mtime":1596333469447,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"12cscu4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":2,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\index.js",[],["72","73"],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\App.js",["74"],"import React from 'react'\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport cookie from 'react-cookies'\r\nimport axios from 'axios'\r\nimport axiosRetry from 'axios-retry';\r\n\r\n\r\nimport { regions } from './constants.js'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n// import { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faHome, faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nimport Navbar from './components/Navbar.js'\r\nimport Home from './pages/Home.js'\r\nimport BestBans from './pages/BestBans.js'\r\nimport About from './pages/About.js'\r\nimport Donate from './pages/Donate.js'\r\nimport DesktopApp from './pages/DesktopApp.js'\r\nimport Tiltseek from './pages/Tiltseek.js'\r\nimport CompChecker from './pages/CompChecker.js'\r\n\r\n\r\nlibrary.add(faHome, faToggleOn, faToggleOff)\r\n\r\nArray.range = (start, end) => Array.from({length: (end - start)}, (v, k) => k + start);\r\n\r\n\r\naxiosRetry(axios, {\r\n\tretries: 3,\r\n\tretryDelay: axiosRetry.exponentialDelay,\r\n});\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n\taxios.defaults.baseURL = 'http://localhost:3001/api/na1'\r\n} else {\r\n\taxios.defaults.baseURL = window.location.protocol + '//' + window.location.host + '/api/na1'\r\n}\r\n\r\nif (window.desktop) {\r\n\tvar dataTransfer = new window.dataTransfer('overlay', {\r\n\t\tsetScaling: (data) => {\r\n\t\t\twindow.webFrame.setZoomFactor(1/data)\r\n\t\t},\r\n\t})\r\n\tdataTransfer.send('getScaling')\r\n}\r\n\r\nvar prevMouseState = 'up'\r\nconst sendMouseState = (state) => {\r\n\tif (window.desktop && state != prevMouseState) {\r\n\t\tdataTransfer.send('mouseState', state)\r\n\t\tprevMouseState = state\r\n\t}\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\ttheme: cookie.load('theme') || 'dark',\r\n\t\t\tregions: regions,\r\n\t\t\tselectedRegion: cookie.load('region') || {\r\n\t\t\t\tname: 'NA',\r\n\t\t\t\tcode: 'na1',\r\n\t\t\t},\r\n\t\t\tsummonerName: cookie.load('summonerName'),\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.connectToServer()\r\n\t}\r\n\r\n\tconnectToServer = () => {\r\n\t\tfetch('/')\r\n\t}\r\n\r\n\tsetTheme = (theme) => {\r\n\t\tthis.setState({ theme: theme })\r\n\t\tcookie.save('theme', theme)\r\n\t}\r\n\r\n\tsetRegion = (region) => {\r\n\t\tthis.setState({ selectedRegion: region })\r\n\t\tcookie.save('region', region)\r\n\t}\r\n\r\n\tsetSummonerName = (summonerName) => {\r\n\t\tthis.setState({ summonerName: summonerName })\r\n\t\tcookie.save('summonerName', summonerName)\r\n\t}\r\n\r\n\trender() {\r\n\t\tvar params = new URLSearchParams(window.location.href)\r\n\t\tvar desktop = params.get('desktop')\r\n\t\treturn (\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={css(styles.flex)}\r\n\t\t\t\t\tonMouseDown={() => sendMouseState('down') }\r\n\t\t\t\t\tonMouseUp={() => sendMouseState('up') }\r\n\t\t\t\t\tonMouseLeave={() => sendMouseState('up') }\r\n\t\t\t\t>\r\n\t\t\t\t\t{!desktop ? (\r\n\t\t\t\t\t\t<Navbar\r\n\t\t\t\t\t\t\ttheme={this.state.theme}\r\n\t\t\t\t\t\t\tsetTheme={this.setTheme}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Route path=\"/\" exact render={(props) => {return (\r\n\t\t\t\t\t\t<Home\r\n\t\t\t\t\t\t\ttheme={this.state.theme}\r\n\t\t\t\t\t\t\tregions={this.state.regions}\r\n\t\t\t\t\t\t\tselectedRegion={this.state.selectedRegion}\r\n\t\t\t\t\t\t\tsetRegion={this.setRegion}\r\n\t\t\t\t\t\t\tsummonerName={this.state.summonerName}\r\n\t\t\t\t\t\t\tsetSummonerName={this.setSummonerName}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}} />\r\n\t\t\t\t\t<Route path=\"/tiltseek/\" render={(props) => {return (\r\n\t\t\t\t\t\t<Tiltseek\r\n\t\t\t\t\t\t\ttheme={this.state.theme}\r\n\t\t\t\t\t\t\tregions={this.state.regions}\r\n\t\t\t\t\t\t\tdesktop={desktop}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}} />\r\n\t\t\t\t\t<Route path=\"/about/\" render={(props) => {return (\r\n\t\t\t\t\t\t<About\r\n\t\t\t\t\t\t\ttheme={this.state.theme}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}} />\r\n\t\t\t\t\t<Route path=\"/desktopapp/\" render={(props) => {return (\r\n\t\t\t\t\t\t<DesktopApp\r\n\t\t\t\t\t\t\ttheme={this.state.theme}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}} />\r\n\t\t\t\t\t<Route path=\"/donate/\" render={(props) => {return (\r\n\t\t\t\t\t\t<Donate\r\n\t\t\t\t\t\t\ttheme={this.state.theme}\r\n\t\t\t\t\t\t\taxios={axios}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}} />\r\n\t\t\t\t\t<Route path=\"/bestbans/\" render={(props) => {return (\r\n\t\t\t\t\t\t<BestBans\r\n\t\t\t\t\t\t\ttheme={this.state.theme}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}} />\r\n\t\t\t\t\t<Route path=\"/compchecker/\" render={(props) => {return (\r\n\t\t\t\t\t\t<CompChecker\r\n\t\t\t\t\t\t\ttheme={this.state.theme}\r\n\t\t\t\t\t\t\taxios={axios}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}} />\r\n\t\t    </div>\r\n\t\t\t</BrowserRouter>\r\n\t  );\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  flex: {\r\n    display: 'flex',\r\n\t\tflex: 1,\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'stretch',\r\n\t\tminHeight: '100vh',\r\n  },\r\n});\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\serviceWorker.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\constants.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\components\\Navbar.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\BestBans.js",["75","76","77","78"],"import React from 'react'\r\nimport { StyleSheet, css } from 'aphrodite'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport axios from 'axios'\r\nimport axiosRetry from 'axios-retry';\r\n\r\nimport { FontSize, theme } from './../Styling.js'\r\n\r\nimport profilePic from './../images/profilePic.jpg'\r\n\r\nvar stripe = window.Stripe('pk_live_n9tt3dAQE6pqrkzygut35k1Z')\r\n\r\n\r\naxiosRetry(axios, {\r\n\tretries: 3,\r\n\tretryDelay: axiosRetry.exponentialDelay,\r\n});\r\n\r\n\r\nclass BestBans extends React.Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tif (process.env.NODE_ENV === 'development') {\r\n\t\t\taxios.defaults.baseURL = 'http://localhost:3001/api/' + this.state.region\r\n\t\t} else {\r\n\t\t\taxios.defaults.baseURL = window.location.protocol + '//' + window.location.host + '/api/na'\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\r\n\t\t\t// Load currentGameVersion, championData, and championStats\r\n\t\t\t\r\n\t\t\tvar currentGameVersion = (await axios.get('https://ddragon.leagueoflegends.com/api/versions.json')).data[0]\r\n\r\n\t\t\tvar championData = (await axios.get(`https://ddragon.leagueoflegends.com/cdn/${currentGameVersion}/data/en_US/champion.json`)).data.data\r\n\t\t\t\r\n\t\t\tfor (var champ of Object.keys(championData)) {\r\n\t\t\t\tchampionData[championData[champ].key] = championData[champ]\r\n\t\t\t}\r\n\r\n\t\t\tvar stats = (await axios.get('/stats')).data\r\n\t\t\tthis.setCalculatedBans(stats, championData)\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e)\r\n\t\t}\r\n\t}\r\n\r\n\tsetCalculatedBans(stats, championData) {\r\n\t\tvar results = {}\r\n\r\n\t\tvar champStats = stats.champStats\r\n\r\n\t\tvar totalMatches = champStats.reduce((sum, champ) => sum + champ.count, 0)/10\r\n\r\n\t\tconsole.log(totalMatches)\r\n\r\n\t\tconsole.log(champStats)\r\n\r\n\t\tconsole.log(championData)\r\n\r\n\t\tfor (var champ of champStats) {\r\n\t\t\tresults[champ._id] = {\r\n\t\t\t\tinfluence: 10000 * ( champ.winRateAvg - 0.5 ) * ( champ.pickRateAvg ?? ( champ.count / totalMatches ) ) / ( 1 - (champ.banRateAvg ?? 0) ),\r\n\t\t\t\tpickRate: champ.pickRateAvg ?? ( champ.count / totalMatches ),\r\n\t\t\t\twinRate: champ.winRateAvg,\r\n\t\t\t\tbanRate: champ.banRateAvg ?? '?',\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tcalculations: results,\r\n\t\t\tchampionData: championData,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\r\n\t\treturn (\r\n\t\t\t<div className={css(styles.container)}>\r\n\t\t\t\t{ this.state.championData ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={css(styles.picturesContainer)}>\r\n\t\t\t\t\t\t\t{Object.entries(this.state.calculations).sort((a, b) => b[1].influence - a[1].influence).slice(0, 16).map((arr, i) => {\r\n\t\t\t\t\t\t\t\tvar champId = arr[0]\r\n\t\t\t\t\t\t\t\tvar data = arr[1]\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className={css(styles.pictureContainer)}>\r\n\t\t\t\t\t\t\t\t\t\t<img className={css(styles.picture)} src={`https://ddragon.leagueoflegends.com/cdn/img/champion/loading/${this.state.championData[champId].id}_0.jpg`}/>\r\n\t\t\t\t\t\t\t\t\t\t<div key={champId}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 600, fontSize: 17, }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t#${i + 1} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t${this.state.championData[champId].name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t`}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 15, }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`Influence: ${data.influence.toFixed(0)}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 15, }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`Win Rate: ${(data.winRate * 100).toFixed(2)}%`}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 15, }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`Pick Rate: ${(data.pickRate * 100).toFixed(2)}%`}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 15, }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`Ban Rate: ${(data.banRate * 100).toFixed(2)}%`}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className={css(styles.explanationText)}>\r\n\r\n\t\t\t\t\t\t\tPlayers often ban emotionally based on frusturation, perceived power, and popular opinion. But these ban choices are rarely ideal for winning. This list contains the ideal bans assuming nothing is known about what champions will be chosen. It's important to note that there are a few scenarios where these are not the best bans. For example, banning out a teammate's champion and causing tilt or banning a high influence champion if you know your team will counter pick them.\r\n\r\n\t\t\t\t\t\t\t<div style={{ marginTop: 15 }}/>\r\n\r\n\t\t\t\t\t\t\tIdeal ban strategy is to ban champions with a high winrate who also have a high playrate. In this list, \"Influence\" represents the average losses per 10,000 games that you can expect due to that champion being on the other team. By banning that champion, you are in effect negating those losses.\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className={css(styles.statsContainer)}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={css(styles.champStatContainer)}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderStyle: 'solid',\r\n\t\t\t\t\t\t\t\t\tborderWidth: '0px 0px 1px 0px',\r\n\t\t\t\t\t\t\t\t\tpaddingBottom: 10,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div style={{ fontWeight: 600, fontSize: 18, flex: 1 }}>\r\n\t\t\t\t\t\t\t\t{`#`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ fontWeight: 600, fontSize: 18, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t{`Name`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ fontWeight: 600, fontSize: 18, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t{`Influence`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ fontWeight: 600, fontSize: 18, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t{`Win Rate`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ fontWeight: 600, fontSize: 18, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t{`Pick Rate`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{ fontWeight: 600, fontSize: 18, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t{`Ban Rate`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{Object.entries(this.state.calculations).sort((a, b) => b[1].influence - a[1].influence).map((arr, i) => {\r\n\t\t\t\t\t\t\t\tvar champId = arr[0]\r\n\t\t\t\t\t\t\t\tvar data = arr[1]\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div className={css(styles.champStatContainer)}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 16, flex: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t{`${i + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 400, fontSize: 16, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${this.state.championData[champId].name}`}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 16, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${data.influence.toFixed(0)}`}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 16, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${(data.winRate * 100).toFixed(2)}%`}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 16, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${(data.pickRate * 100).toFixed(2)}%`}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 300, fontSize: 16, flex: 5 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${(data.banRate * 100).toFixed(2)}%`}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : null }\r\n\t    \t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'stretch',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tflex: 1,\r\n\t\t},\r\n\t\tpicturesContainer: {\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tgridTemplateColumns: 'auto auto auto auto',\r\n\t\t\tgridTemplateRows: 'auto',\r\n\t\t\tcolumnGap: 10,\r\n\t\t\trowGap: 30,\r\n\t\t\tjustifyItems: 'center',\r\n\t\t\tmarginTop: 40,\r\n\t\t\t'@media (min-width: 1100px)': {\r\n\t\t\t\twidth: 1100,\r\n\t\t\t\talignSelf: 'center',\r\n\t\t\t},\r\n\t\t},\r\n\t\tpictureContainer: {\r\n\t\t\twidth: '20vw',\r\n\t\t\tmaxWidth: 200,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\talignItems: 'center',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tcolor: theme('text2', t, true),\r\n\t\t},\r\n\t\tpicture: {\r\n\t\t\tmaxWidth: '100%',\r\n\t\t\tmaxHeight: '300px',\r\n\t\t},\r\n\t\tstatsContainer: {\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tgridTemplateColumns: 'auto',\r\n\t\t\tgridTemplateRows: 'auto',\r\n\t\t\tcolumnGap: 10,\r\n\t\t\trowGap: 10,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderColor: theme('accent1', t),\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\tpadding: '10px 5px',\r\n\t\t\tmargin: '30px 0 30px 0',\r\n\t\t\t'@media (min-width: 600px)': {\r\n\t\t\t\tmargin: '30px 5vw 30px 5vw',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1000px)': {\r\n\t\t\t\twidth: 850,\r\n\t\t\t\talignSelf: 'center',\r\n\t\t\t},\r\n\t\t},\r\n\t\tchampStatContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'row',\r\n\t\t\talignItems: 'center',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tcolor: theme('text2', t, true),\r\n\t\t},\r\n\t\texplanationText: {\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\tfontSize: 18,\r\n\t\t\tmargin: '30px 10px 0 10px',\r\n\t\t\t'@media (min-width: 600px)': {\r\n\t\t\t\tmargin: '30px 5vw 0 5vw',\r\n\t\t\t},\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderColor: theme('accent1', t),\r\n\t\t\tborderRadius: 5,\r\n\t\t\tpadding: '15px 25px',\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\t'@media (min-width: 1100px)': {\r\n\t\t\t\twidth: 945,\r\n\t\t\t\talignSelf: 'center',\r\n\t\t\t},\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\nexport default withRouter(BestBans);\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\About.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Home.js",[],"C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\DesktopApp.js",["79","80"],"import React from 'react'\r\nimport { StyleSheet, css } from 'aphrodite'\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport { FontSize, theme } from './../Styling.js'\r\n\r\nimport profilePic from './../images/profilePic.jpg'\r\n\r\n\r\nclass DesktopApp extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\t\treturn (\r\n\t\t\t<div className={css(styles.container)}>\r\n\t\t\t\t<div className={css(styles.descriptionText)}>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{ margin: '0px 10%' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{`The Tiltseeker Desktop App is an assistive software designed to predict the outcome of a match using only information available from the Champion Select screen. It is a work in progress. Below is an early preview. Join the Tiltseeker Discord at the link in the navbar above to receive updates and gain access to the early alpha.`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={css(styles.videoContainer)}>\r\n\t\t\t\t\t<iframe width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/efR5Znx8kI0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n\t\t\t\t</div>\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tflex: 1,\r\n\t  },\r\n\t\tdescriptionText: {\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\talignItems: 'center',\r\n\t\t\t...FontSize.medium,\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\twidth: '90%',\r\n\t\t\t'@media (min-width: 700px)': {\r\n\t\t\t\twidth: '85%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\twidth: '80%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1100px)': {\r\n\t\t\t\twidth: '75%',\r\n\t\t\t},\r\n\t\t},\r\n\t\tvideoContainer: {\r\n\t\t\twidth: '80%',\r\n\t\t\theight: '45vw',\r\n\t\t\t'@media (min-width: 800px)': {\r\n\t\t\t\twidth: '70%',\r\n\t\t\t\theight: '39.375vw',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1300px)': {\r\n\t\t\t\twidth: '60%',\r\n\t\t\t\theight: '33.75vw',\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\nexport default withRouter(DesktopApp);\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Donate.js",["81","82","83","84"],"import React from 'react'\r\nimport { StyleSheet, css } from 'aphrodite'\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nimport { FontSize, theme } from './../Styling.js'\r\n\r\nimport profilePic from './../images/profilePic.jpg'\r\nimport axiosRetry from 'axios-retry'\r\n\r\nvar stripe = window.Stripe(process.env.NODE_ENV == 'development' ? 'pk_test_bvpzFNK36siET1hGtZkQosZ0' : 'pk_live_n9tt3dAQE6pqrkzygut35k1Z')\r\n\r\n\r\nclass Donate extends React.Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tprice: null,\r\n\t\t\tpricePerHour: 1.5, // M10 Tier at 10 GB is $0.08 / hour\r\n\t\t\tsolventFor: null,\r\n\t\t\tdaysBought: null,\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.amountInput.select()\r\n\r\n\t\tvar params = new URLSearchParams(this.props.location.search)\r\n\t\tif (params.get('session_id')) {\r\n\t\t\tvar donation = (await this.props.axios({\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\turl: '/submitDonation', \r\n\t\t\t\tdata: {\r\n\t\t\t\t\tsessionId: params.get('session_id')\r\n\t\t\t\t},\r\n\t\t\t})).data\r\n\t\t\tvar money = this.amtAfterFees(donation.session.amount_total)\r\n\t\t\tthis.setState({\r\n\t\t\t\tdaysBought: money / ( this.state.pricePerHour * 24 )\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tvar donations = (await this.props.axios.get('/getDonations'))?.data\r\n\t\tvar totalDonated = donations.reduce((sum, donation) => sum + this.amtAfterFees(donation.amount), 0)\r\n\t\tvar pricePerSecond = this.state.pricePerHour / (60 * 60)\r\n\t\tvar daysLeft = (((donations[0]?.paidAt ?? new Date().getTime() / 1000) + (totalDonated / pricePerSecond)) - (new Date().getTime() / 1000)) / (60 * 60 * 24)\r\n\t\tthis.setState({\r\n\t\t\tsolventFor: daysLeft\r\n\t\t})\r\n\t\tconsole.log(donations)\r\n\t\tconsole.log(totalDonated)\r\n\t}\r\n\r\n\tmakeDonation(amt) {\r\n\t\tstripe.redirectToCheckout({\r\n\t\t\titems: [{ \r\n\t\t\t\tsku: process.env.NODE_ENV == 'development' ? 'sku_GmMuGMGc8jTd4g' : 'sku_GmMK7lAi6vfMnN', quantity: parseInt(amt)\r\n\t\t\t}],\r\n\t\t\tsuccessUrl: window.location.origin + '/donate?session_id={CHECKOUT_SESSION_ID}',\r\n\t\t\tcancelUrl: window.location.origin + '/donate',\r\n\t\t})\r\n\t\t.then(function (result) {\r\n\t\t\tif (result.error) {\r\n\t\t\t\talert(result.error.message)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tamtAfterFees(amt) {\r\n\t\treturn amt * 0.971 - 0.3\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\r\n\t\tvar makeDonationButtons = () => {\r\n\t\t\tvar buttons = [1, 5, 10, 25, 50, 100].map((amt) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={css(styles.donateButtons)}\r\n\t\t\t\t\t\tonClick={() => this.makeDonation(amt)}\r\n\t\t\t\t\t\tkey={amt}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{'$' + amt}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t\treturn (\r\n\t\t\t\t<div className={css(styles.donateButtonsContainer)}>\r\n\t\t\t\t\t{buttons}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={css(styles.container)}>\r\n\t\t\t\t<div className={css(styles.donationText)}>\r\n\t\t\t\t\t<div className={css(styles.daysLeft)} style={{ opacity: this.state.daysBought != null ? 1 : 0, height: this.state.daysBought != null ? 40 : 0 }}>\r\n\t\t\t\t\t\t{`Thank you for keeping Tiltseeker running for ${(this.state.daysBought)?.toFixed(2) ?? '...'} more days`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<div className={css(styles.daysLeft)} style={{ opacity: this.state.solventFor != null ? 1 : 0, height: this.state.solventFor != null ? 40 : 0 }}>\r\n\t\t\t\t\t\t{`With a monthly cost of $${(this.state.pricePerHour * 24 * 30 / 100).toFixed(2)}, Tiltseeker has funds to run for ${(this.state.solventFor)?.toFixed(2) ?? '...'} days`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{`Tiltseeker is a passion project that I work on in my spare time. It is run entirely off of donations provided by generous and passionate League of Legends players. If you'd like to help support me in keeping Tiltseeker's servers running, you can donate through the form below. All donations are one time payments only.`}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<div style={{ margin: '0px 40px', textAlign: 'center' }}>\r\n\t\t\t\t\t\t{`I really hate ads, and your support in keeping Tiltseeker beautiful and ad free for everyone is greatly appreciated.`}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{makeDonationButtons()}\r\n\t\t\t\t<div className={css(styles.amountContainer)}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={css(styles.amountInput)}\r\n\t\t\t\t\t\tvalue={ this.state.price ? '$' + this.state.price : '' }\r\n\t\t\t\t\t\tonChange={(e) => this.setState({ price: e.target.value.split('.')[0].replace(/\\D/g,'') })}\r\n\t\t\t\t\t\tref={(me) => {this.amountInput = me}}\r\n\t\t\t\t\t\tonKeyDown={e => e.key === 'Enter' ? this.makeDonation(this.state.price) : null}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\tplaceholder=\"$\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={css(styles.donateButton)}\r\n\t\t\t\t\tonClick={() => this.makeDonation(this.state.price)}\r\n\t\t\t\t>\r\n\t\t\t\t\tDonate\r\n\t\t\t\t</div>\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tflex: 1,\r\n\t\t},\r\n\t\tdaysLeft: {\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\t...FontSize.large,\r\n\t\t\tfontWeight: 'bold',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, opacity 1s, height 1s',\r\n\t\t},\r\n\t\tdonationText: {\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\t...FontSize.medium,\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\twidth: '80%',\r\n\t\t\t'@media (min-width: 700px)': {\r\n\t\t\t\twidth: '75%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\twidth: '70%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1100px)': {\r\n\t\t\t\twidth: '65%',\r\n\t\t\t},\r\n\t\t},\r\n\t\tamountContainer: {\r\n\t\t\tpaddingTop: 25,\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tmaxWidth: 100,\r\n\t\t\twidth: '60%',\r\n\t\t\t'@media (min-width: 600px)': {\r\n\t\t\t\twidth: '50%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\twidth: '40%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1300px)': {\r\n\t\t\t\twidth: '30%',\r\n\t\t\t},\r\n\t\t},\r\n\t\tamountInput: {\r\n\t\t\theight: 50,\r\n\t\t\tpaddingTop: '2%',\r\n\t\t\tpaddingBottom: '2%',\r\n\t\t\twidth: '100%',\r\n\t\t\tborderRadius: 10,\r\n\t\t\toutline: 'none',\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tfontFamily: 'Montserrat',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\t...FontSize.large,\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tcolor: theme('text2', t, true),\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\t':focus': {\r\n\t\t\t\tborderColor: theme('inputHighlight2', t, true),\r\n\t\t\t\tbackgroundColor: theme('inputHighlightBackground', t),\r\n\t\t\t},\r\n\t\t\t':hover': {\r\n\t\t\t\tborderColor: theme('inputHighlight2', t, true),\r\n\t\t\t\tbackgroundColor: theme('inputHighlightBackground', t),\r\n\t\t\t},\r\n\t\t\t'::selection': {\r\n\t\t\t\tbackgroundColor: '#CCC',\r\n\t\t\t},\r\n\t\t},\r\n\t\tdonateButton: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tmarginBottom: 200,\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\theight: 35,\r\n\t\t\t...FontSize.medium,\r\n\t\t\tminWidth: '40%',\r\n\t\t\t'@media (min-width: 600px)': {\r\n\t\t\t\tminWidth: '30%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\tminWidth: '20%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1300px)': {\r\n\t\t\t\tminWidth: '15%',\r\n\t\t\t},\r\n\t\t\tmarginTop: 25,\r\n\t\t\tborderRadius: 10,\r\n\t\t\toutline: 'none',\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tcolor: theme('text2', t, false),\r\n\t\t\tborderColor: theme('buttonAccent', t, false),\r\n\t\t\tbackgroundColor: theme('button', t),\r\n\t\t\t':hover': {\r\n\t\t\t\tborderColor: theme('buttonHoveredAccent', t, false),\r\n\t\t\t\tbackgroundColor: theme('buttonHovered', t),\r\n\t\t\t\tcolor: theme('text2', t, true),\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t}\r\n\t\t},\r\n\t\tdonateButtonsContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'stretch',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\toverflow: 'hidden',\r\n\t\t\theight: 35,\r\n\t\t\tmarginTop: 65,\r\n\t\t\tborderRadius: 10,\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\toutline: 'none',color: theme('text2', t, false),\r\n\t\t\tbackgroundColor: theme('buttonAccent', t, false),\r\n\t\t\tborderColor: theme('buttonAccent', t, false),\r\n\t\t\tminWidth: '60%',\r\n\t\t\t'@media (min-width: 600px)': {\r\n\t\t\t\tminWidth: '50%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 900px)': {\r\n\t\t\t\tminWidth: '45%',\r\n\t\t\t},\r\n\t\t\t'@media (min-width: 1300px)': {\r\n\t\t\t\tminWidth: '40%',\r\n\t\t\t},\r\n\t\t},\r\n\t\tdonateButtons: {\r\n\t\t\t...FontSize.mediumSmall,\r\n\t\t\tflex: 1,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tcolor: theme('text2', t, false),\r\n\t\t\tcursor: 'pointer',\r\n\t\t\tbackgroundColor: theme('button', t),\r\n\t\t\ttransition: 'background-color 0.15s, border-color 0.25s, color 0.25s',\r\n\t\t\t':hover': {\r\n\t\t\t\tborderColor: theme('buttonHoveredAccent', t, false),\r\n\t\t\t\tbackgroundColor: theme('buttonHovered', t),\r\n\t\t\t\tcolor: theme('accent3', t, true),\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t},\r\n\t\t\t':active': {\r\n\t\t\t\tbackgroundColor: theme('buttonPressed', t),\r\n\t\t\t}\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\nexport default withRouter(Donate);\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\Tiltseek.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107"],"import React from 'react'\r\nimport { StyleSheet, css } from 'aphrodite'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport axios from 'axios'\r\nimport axiosRetry from 'axios-retry';\r\nimport ProgressBar from './../components/ProgressBar.js'\r\n\r\nimport { FontSize, ItemSize, theme } from './../Styling.js'\r\n\r\naxiosRetry(axios, {\r\n\tretries: 3,\r\n\tretryDelay: axiosRetry.exponentialDelay,\r\n});\r\n\r\n\r\nclass Tiltseek extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tvar quotes = [\r\n\t\t\t`\"Stats are good, winning is better\" - Faker... probably`,\r\n\t\t\t`\"We'll use Tiltseeker for week 2 at Worlds\" - Every NA Team`,\r\n\t\t\t`\"Please be our friend\" - Amumu`,\r\n\t\t\t`\"Camp someone who flames as much as Brand\" - Bjergsen... probably`,\r\n\t\t\t`\"Camp someone toxic. Like my sister, Cassiopeia\" - Katarina`,\r\n\t\t\t`\"Would you like a tent?\" - Losing Midlaner`,\r\n\t\t\t`\"Our midlaner has less vision than I do\" - Lee Sin`,\r\n\t\t\t`\"With Tiltseeker, you can transform into something better\" - Kayn`,\r\n\t\t\t`\"Camp someone who has no mana\" - Tyler1... maybe`,\r\n\t\t\t`\"Keep camping. See what happens.\" - Someone you should keep camping`,\r\n\t\t\t`\"Tiltseeker seems fair and balanced.\" - CertainlyT`,\r\n\t\t]\r\n\r\n\t\tvar params = new URLSearchParams(this.props.location.search)\r\n\t\tthis.state = {\r\n\t\t\tregion: params.get('region'),\r\n\t\t\tsummonerName: params.get('summonerName'),\r\n\t\t\tstage: 'loading',\r\n\t\t\tprogress: 0,\r\n\t\t\ttotalProgress: 28,\r\n\t\t\tquote: quotes[Math.floor(Math.random() * quotes.length)],\r\n\t\t\terrMsg: '',\r\n\r\n\t\t\tsummonerData: null,\r\n\t\t\tcurrentGame: null,\r\n\t\t\tchampionMasteries: null,\r\n\t\t\trankedInfo: null,\r\n\t\t\tchampionHistories: null,\r\n\t\t\tlossStreakHistories: null,\r\n\t\t\tcurrentGameVersion: null,\r\n\t\t\tchampionData: null,\r\n\t\t\tchampionStats: null,\r\n\t\t}\r\n\t\tif (process.env.NODE_ENV === 'development') {\r\n\t\t\taxios.defaults.baseURL = 'http://localhost:3001/api/' + this.state.region\r\n\t\t} else {\r\n\t\t\taxios.defaults.baseURL = window.location.protocol + '//' + window.location.host + '/api/' + this.state.region\r\n\t\t}\r\n\t}\r\n\r\n\tincrementProgress = (amt=1) => {\r\n\t\tthis.setState(state => {\r\n\t\t\treturn { progress: this.state.progress + amt }\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tvar summonerData = null\r\n\t\tvar currentGame = null\r\n\t\tvar championMasteries = []\r\n\t\tvar accountInfo = null\r\n\t\tvar rankedInfo = []\r\n\t\tvar championHistories = null\r\n\t\tvar lossStreakHistories = null\r\n\r\n\t\tvar currentGameVersion = null\r\n\t\tvar championData = null\r\n\t\tvar championStats = {}\r\n\r\n\t\tvar errMsg = ''\r\n\r\n\t\taxios.get('/lol/summoner/v4/summoners/by-name/' + this.state.summonerName)\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tsummonerData = res.data\r\n\t\t\tconsole.log(summonerData)\r\n\t\t\treturn axios.get('/lol/spectator/v4/active-games/by-summoner/' + summonerData.id)\r\n\t\t})\r\n\r\n\t\t// Get all players' account info\r\n\t\t.then((res) => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tcurrentGame = res.data\r\n\t\t\tconsole.log(currentGame)\r\n\t\t\tvar accountInfoLookups = []\r\n\t\t\tfor (var [i, participant] of Object.entries(currentGame.participants)) {\r\n\t\t\t\taccountInfoLookups.push(axios.get('/lol/summoner/v4/summoners/' + participant.summonerId))\r\n\t\t\t}\r\n\t\t\treturn axios.all(accountInfoLookups)\r\n\t\t})\r\n\r\n\t\t// Load champion masteries\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\taccountInfo = res.map(single => {\r\n\t\t\t\treturn single.data\r\n\t\t\t})\r\n\t\t\tconsole.log(accountInfo)\r\n\t\t\tvar masteryLookups = []\r\n\t\t\tconsole.log(currentGame.participants)\r\n\t\t\tfor (let [i, participant] of Object.entries(currentGame.participants)) {\r\n\t\t\t\tmasteryLookups.push(\r\n\t\t\t\t\taxios.get('/lol/champion-mastery/v4/champion-masteries/by-summoner/' + participant.summonerId + '/by-champion/' + participant.championId)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tchampionMasteries[i] = res.data\r\n\t\t\t\t\t}).\r\n\t\t\t\t\tcatch((err) => {\r\n\t\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\treturn axios.all([res, axios.all(masteryLookups)])\r\n\t\t})\r\n\r\n\t\t// Load ranked info\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tvar rankedLookups = []\r\n\t\t\tfor (let [i, participant] of Object.entries(currentGame.participants)) {\r\n\t\t\t\trankedLookups.push(\r\n\t\t\t\t\taxios.get('/lol/league/v4/entries/by-summoner/' + participant.summonerId)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\trankedInfo[i] = res.data\r\n\t\t\t\t\t}).\r\n\t\t\t\t\tcatch((err) => {\r\n\t\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\treturn axios.all([res, axios.all(rankedLookups)])\r\n\t\t})\r\n\r\n\t\t//  Load championHistories with last games played on current champion\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tconsole.log(rankedInfo)\r\n\t\t\tconsole.log(championMasteries)\r\n\t\t\tvar historyLookups = []\r\n\t\t\tfor (var [i, participant] of Object.entries(currentGame.participants)) {\r\n\t\t\t\thistoryLookups.push(\r\n\t\t\t\t\taxios.get('/lol/match/v4/matchlists/by-account/' + accountInfo[i].accountId + '?champion=' + participant.championId + '&endIndex=30&queue=400&queue=420&queue=430&queue=440')\r\n\t\t\t\t\t.catch(err => {\r\n\t\t\t\t\t\tconsole.log('err')\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\treturn axios.all(historyLookups)\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tvar fullHistoryLookups = []\r\n\t\t\tconsole.log(res)\r\n\t\t\tvar matchCount = res.reduce((total, player) => total + (player ? player.data.matches.length : 0), 0)\r\n\t\t\tfor (var player of res) {\r\n\t\t\t\tvar matchSet = []\r\n\t\t\t\tif (player === undefined) {\r\n\t\t\t\t\tfullHistoryLookups.push(undefined)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var match of player.data.matches.filter(match => match.platformId.toLowerCase() === this.state.region.toLowerCase())) {\r\n\t\t\t\t\t\tmatchSet.push(new Promise((resolve, reject) => {\r\n\t\t\t\t\t\t\t// fix to load matches that were played in different regions\r\n\t\t\t\t\t\t\taxios.get(\r\n\t\t\t\t\t\t\t\taxios.defaults.baseURL.replace(/[^/]*$/, '') +\r\n\t\t\t\t\t\t\t\tmatch.platformId.toLowerCase() +\r\n\t\t\t\t\t\t\t\t'/lol/match/v4/matches/' + match.gameId\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.then(data => {\r\n\t\t\t\t\t\t\t\tthis.incrementProgress(15/matchCount)\r\n\t\t\t\t\t\t\t\tresolve(data)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(err => reject(err))\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfullHistoryLookups.push(axios.all(matchSet))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn axios.all(fullHistoryLookups)\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tchampionHistories = res.map((hist) => hist === undefined ? undefined : hist.map((game) => {\r\n\t\t\t\treturn game.data\r\n\t\t\t}))\r\n\t\t\tconsole.log(championHistories)\r\n\t\t\treturn res\r\n\t\t})\r\n\r\n\t\t// Load lossStreakHistories with last 5 games for each account\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tconsole.log(championMasteries)\r\n\t\t\tvar historyLookups = []\r\n\t\t\tfor (var [i, participant] of Object.entries(currentGame.participants)) {\r\n\t\t\t\thistoryLookups.push(\r\n\t\t\t\t\taxios.get('/lol/match/v4/matchlists/by-account/' + accountInfo[i].accountId + '?endIndex=5')\r\n\t\t\t\t\t.catch(err => {\r\n\t\t\t\t\t\tconsole.log('err')\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\treturn axios.all(historyLookups)\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tvar fullHistoryLookups = []\r\n\t\t\tconsole.log(res)\r\n\t\t\tfor (var player of res) {\r\n\t\t\t\tvar matchSet = []\r\n\t\t\t\tif (player === undefined) {\r\n\t\t\t\t\tfullHistoryLookups.push(undefined)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var match of player.data.matches) {\r\n\t\t\t\t\t\tmatchSet.push(axios.get('/lol/match/v4/matches/' + match.gameId))\r\n\t\t\t\t\t\t// axios.get('/lol/match/v4/matches/' + match.gameId)\r\n\t\t\t\t\t\t// .then(res => {})\r\n\t\t\t\t\t\t// .catch(err => {console.log(err)})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfullHistoryLookups.push(axios.all(matchSet))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn axios.all(fullHistoryLookups)\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tlossStreakHistories = res.map((hist) => hist === undefined ? undefined : hist.map((game) => {\r\n\t\t\t\treturn game.data\r\n\t\t\t}))\r\n\t\t\tconsole.log(lossStreakHistories)\r\n\t\t\treturn res\r\n\t\t})\r\n\r\n\t\t// Load currentGameVersion, championData, and championStats\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\treturn axios.get('https://ddragon.leagueoflegends.com/api/versions.json')\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tcurrentGameVersion = res.data[0]\r\n\t\t\treturn axios.get(`https://ddragon.leagueoflegends.com/cdn/${currentGameVersion}/data/en_US/champion.json`)\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tchampionData = res.data.data\r\n\t\t\tfor (var champ of Object.keys(championData)) {\r\n\t\t\t\tchampionData[championData[champ].key] = championData[champ]\r\n\t\t\t}\r\n\t\t\tconsole.log(res.data.data)\r\n\t\t\treturn axios.get('/stats')\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.incrementProgress(1)\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tfor (var champ of res.data.champStats) {\r\n\t\t\t\tchampionStats[champ._id] = champ\r\n\t\t\t}\r\n\t\t\tconsole.log(championStats)\r\n\t\t\tthis.setState({\r\n\t\t\t\tsummonerData: summonerData,\r\n\t\t\t\tcurrentGame: currentGame,\r\n\t\t\t\tchampionMasteries: championMasteries,\r\n\t\t\t\trankedInfo: rankedInfo,\r\n\t\t\t\tchampionHistories: championHistories,\r\n\t\t\t\tlossStreakHistories: lossStreakHistories,\r\n\t\t\t\tcurrentGameVersion: currentGameVersion,\r\n\t\t\t\tchampionData: championData,\r\n\t\t\t\tchampionStats: championStats,\r\n\t\t\t\tstage: 'loaded',\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t})\r\n\r\n\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err)\r\n\t\t\tif (err.response.config.url.includes('/lol/summoner/v4/summoners/by-name/') && err.response.status === 404) {\r\n\t\t\t\terrMsg = `An account with name \"${this.state.summonerName}\" does not exist. Make sure the region is correct!`\r\n\t\t\t} else if (err.response.config.url.includes('/lol/spectator/v4/active-games/by-summoner/') && err.response.status === 404) {\r\n\t\t\t\terrMsg = `\"${this.state.summonerName}\" is not in game. Make sure the region is correct!`\r\n\t\t\t} else {\r\n\t\t\t\terrMsg = err.response.statusText\r\n\t\t\t}\r\n\t\t\tconsole.log(errMsg)\r\n\t\t\tthis.setState({ errMsg: errMsg, stage: 'error' })\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\t\treturn (\r\n\t\t\t<div className={!this.props.desktop ? css(styles.container) : css(styles.container, styles.containerDesktop)}>\r\n\t\t\t\t{ this.state.stage == 'loading' ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={css(styles.loadingText)}>\r\n\t\t\t\t\t\t\t{this.state.quote}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\tprogress={this.state.progress}\r\n\t\t\t\t\t\t\tpercent={this.state.totalProgress == 0 ? 0 : this.state.progress/this.state.totalProgress}\r\n\t\t\t\t\t\t\ttheme={this.props.theme}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : null }\r\n\t\t\t\t{ this.state.stage == 'loaded' ? (\r\n\t\t\t\t\t<DataDisplay\r\n\t\t\t\t\t\ttheme={this.props.theme}\r\n\t\t\t\t\t\tsummonerData={this.state.summonerData}\r\n\t\t\t\t\t\tcurrentGame={this.state.currentGame}\r\n\t\t\t\t\t\tchampionMasteries={this.state.championMasteries}\r\n\t\t\t\t\t\trankedInfo={this.state.rankedInfo}\r\n\t\t\t\t\t\tchampionHistories={this.state.championHistories}\r\n\t\t\t\t\t\tlossStreakHistories={this.state.lossStreakHistories}\r\n\t\t\t\t\t\tcurrentGameVersion={this.state.currentGameVersion}\r\n\t\t\t\t\t\tchampionData={this.state.championData}\r\n\t\t\t\t\t\tchampionStats={this.state.championStats}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null }\r\n\t\t\t\t{ this.state.stage == 'error' ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className={css(styles.errContainer)}>\r\n\t\t\t\t\t\t\t<div className={css(styles.errText)}>\r\n\t\t\t\t\t\t\t\t{this.state.errMsg}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={css(styles.tryAgainButton)}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={css(styles.tryAgainText)}\r\n\t\t\t\t\t\t\t\tonClick={() => this.props.history.push('/')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{'Back'}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : null }\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nclass DataDisplay extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tmouseX: 0,\r\n\t\t\tmouseY: 0,\r\n\t\t\tpopupText: null,\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tgetPercentile = (val, avg, std) => {\r\n\t\tvar getZPercentile = (z) => {\r\n\r\n\t\t\t// z == number of standard deviations from the mean\r\n\r\n\t\t\t// if z is greater than 6.5 standard deviations from the mean the\r\n\t\t\t// number of significant digits will be outside of a reasonable range\r\n\r\n\t\t\tif (z < -6.5) {\r\n\t\t\t\treturn 0.0;\r\n\t\t\t}\r\n\r\n\t\t\tif (z > 6.5) {\r\n\t\t\t\treturn 1.0;\r\n\t\t\t}\r\n\r\n\t\t\tvar factK = 1;\r\n\t\t\tvar sum = 0;\r\n\t\t\tvar term = 1;\r\n\t\t\tvar k = 0;\r\n\t\t\tvar loopStop = Math.exp(-23);\r\n\r\n\t\t\twhile(Math.abs(term) > loopStop) {\r\n\t\t\t\tterm = .3989422804 * Math.pow(-1,k) * Math.pow(z,k) / (2 * k + 1) / Math.pow(2,k) * Math.pow(z,k+1) / factK;\r\n\t\t\t\tsum += term;\r\n\t\t\t\tk++;\r\n\t\t\t\tfactK *= k;\r\n\t\t\t}\r\n\r\n\t\t\tsum += 0.5;\r\n\r\n\t\t\treturn sum;\r\n\t\t}\r\n\r\n\t\treturn getZPercentile((val-avg)/std)\r\n\t}\r\n\r\n\tcalcLosingStreak = (player, numeric=false) => {\r\n\t\tvar streak = 0\r\n\t\tvar history = this.props.lossStreakHistories[player[1]]\r\n\t\tvar lastGameTime = Date.now()\r\n\t\tfor (var i = 0; i < history.length; i++) {\r\n\t\t\tvar win = history[i].participants[history[i].participantIdentities.filter(participant => {\r\n\t\t\t\treturn participant.player.summonerId == player[0].summonerId\r\n\t\t\t})[0].participantId - 1].stats.win\r\n\t\t\tif (!win && lastGameTime - history[i].gameCreation < 12 * 60 * 60 * 1000) {\r\n\t\t\t\tstreak += 1\r\n\t\t\t\tlastGameTime = history[i].gameCreation\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn streak\r\n\t}\r\n\r\n\tcalcWinRate = (player, numeric=false) => {\r\n\t\tvar i = player[1]\r\n\t\tvar rankedInfo = this.props.rankedInfo[i]\r\n\t\tvar wins = rankedInfo.reduce((total, current) => {\r\n\t\t\treturn total += current.wins\r\n\t\t}, 0)\r\n\t\tvar losses = rankedInfo.reduce((total, current) => {\r\n\t\t\treturn total += current.losses\r\n\t\t}, 0)\r\n\t\tif (wins != 0 || losses != 0) {\r\n\t\t\tvar winRate = 100*wins/(wins+losses)\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn winRate/100\r\n\t\t\t}\r\n\t\t\treturn `${winRate.toFixed(1)}% (${wins}W/${losses}L)`\r\n\t\t} else {\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\treturn 'not ranked'\r\n\t\t}\r\n\t}\r\n\r\n\tcalcMasteryPoints = (player, numeric=false) => {\r\n\t\tif (this.props.championMasteries[player[1]]) {\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn this.props.championMasteries[player[1]].championPoints\r\n\t\t\t}\r\n\t\t\treturn this.props.championMasteries[player[1]].championPoints.toLocaleString()\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t}\r\n\r\n\tcalcLastPlayed = (player, numeric=false) => {\r\n\t\tif (this.props.championMasteries[player[1]]) {\r\n\t\t\tvar timeSince = ((Date.now() - this.props.championMasteries[player[1]].lastPlayTime)/(24 * 60 * 60 *1000))\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn timeSince\r\n\t\t\t}\r\n\t\t\treturn `${timeSince.toFixed(0)} day${timeSince == 1 ? '' : 's'} ago`\r\n\t\t} else {\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\treturn 'never'\r\n\t\t}\r\n\t}\r\n\r\n\tcalcAggression = (player, numeric=false) => {\r\n\t\tvar champId = player[0].championId\r\n\t\tvar typical = this.props.championStats[champId]\r\n\t\tif (!this.props.championHistories[player[1]] || this.props.championHistories[player[1]].length < 10) {\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\treturn 'not enough data'\r\n\t\t}\r\n\t\tvar percentiles = []\r\n\t\tfor (var match of this.props.championHistories[player[1]]) {\r\n\t\t\tvar participant = match.participants[match.participantIdentities.filter(participant => {\r\n\t\t\t\treturn participant.player.summonerId == player[0].summonerId\r\n\t\t\t})[0].participantId - 1]\r\n\r\n\t\t\tpercentiles.push((this.getPercentile(\r\n\t\t\t\tparticipant.stats.totalDamageDealtToChampions/match.gameDuration,\r\n\t\t\t\ttypical.totalDamageDealtToChampionsPerSecAvg,\r\n\t\t\t\ttypical.totalDamageDealtToChampionsPerSecStdDev,\r\n\t\t\t) + this.getPercentile(\r\n\t\t\t\tparticipant.stats.totalDamageTaken/match.gameDuration,\r\n\t\t\t\ttypical.totalDamageTakenPerSecAvg,\r\n\t\t\t\ttypical.totalDamageTakenPerSecStdDev,\r\n\t\t\t))/2)\r\n\t\t}\r\n\t\tvar percent = (100 * percentiles.reduce((a, b) => a + b) / percentiles.length)\r\n\t\tif (numeric) {\r\n\t\t\treturn percent/100\r\n\t\t}\r\n\t\treturn `${percent.toFixed(0)}%${percentiles.length < 20 ? ' ?' : ''}`\r\n\t}\r\n\r\n\tcalcWarding = (player, numeric=false) => {\r\n\t\tvar champId = player[0].championId\r\n\t\tvar typical = this.props.championStats[champId]\r\n\t\tif (!this.props.championHistories[player[1]] || this.props.championHistories[player[1]].length < 10) {\r\n\t\t\tif (numeric) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\treturn 'not enough data'\r\n\t\t}\r\n\t\tvar percentiles = []\r\n\t\tfor (var match of this.props.championHistories[player[1]]) {\r\n\t\t\tvar participant = match.participants[match.participantIdentities.filter(participant => {\r\n\t\t\t\treturn participant.player.summonerId == player[0].summonerId\r\n\t\t\t})[0].participantId - 1]\r\n\r\n\t\t\tpercentiles.push(this.getPercentile(\r\n\t\t\t\tparticipant.stats.visionScore/match.gameDuration,\r\n\t\t\t\ttypical.visionScorePerSecAvg,\r\n\t\t\t\ttypical.visionScorePerSecStdDev,\r\n\t\t\t))\r\n\t\t}\r\n\t\tvar percent = (100 * percentiles.reduce((a, b) => a + b) / percentiles.length)\r\n\t\tif (numeric) {\r\n\t\t\treturn percent/100\r\n\t\t}\r\n\t\treturn `${percent.toFixed(0)}%${percentiles.length < 20 ? ' ?' : ''}`\r\n\t}\r\n\r\n\tcalcTiltScore = (player) => {\r\n\t\tvar tiltArr = []\r\n\r\n\t\tvar losingStreak = this.calcLosingStreak(player, true)\r\n\t\tif (losingStreak !== null) {\r\n\t\t\ttiltArr.push(1 - 1/(Math.pow(2,losingStreak)))\r\n\t\t}\r\n\r\n\t\tvar winRate = this.calcWinRate(player, true)\r\n\t\tif (winRate !== null) {\r\n\t\t\ttiltArr.push(1 - winRate)\r\n\t\t}\r\n\r\n\t\tvar masteryPoints = this.calcMasteryPoints(player, true)\r\n\t\tif (masteryPoints !== null) {\r\n\t\t\ttiltArr.push(1/(Math.pow(2,masteryPoints/7000)))\r\n\t\t}\r\n\r\n\t\tvar lastPlayed = this.calcLastPlayed(player, true)\r\n\t\tif (lastPlayed !== null) {\r\n\t\t\ttiltArr.push(1 - 1/(Math.pow(2,lastPlayed/20)))\r\n\t\t} else {\r\n\t\t\ttiltArr.push(1)\r\n\t\t}\r\n\r\n\t\tvar aggression = this.calcAggression(player, true)\r\n\t\tif (aggression !== null) {\r\n\t\t\ttiltArr.push(aggression)\r\n\t\t}\r\n\r\n\t\tvar warding = this.calcWarding(player, true)\r\n\t\tif (warding !== null) {\r\n\t\t\ttiltArr.push(1 - warding)\r\n\t\t}\r\n\r\n\t\tif (tiltArr.length >= 5) {\r\n\t\t\tvar tiltScore = 100 * tiltArr.reduce((prev, curr) => prev + curr) / tiltArr.length\r\n\t\t\treturn `${tiltScore.toFixed(1)}%`\r\n\t\t} else {\r\n\t\t\treturn 'not enough data'\r\n\t\t}\r\n\t}\r\n\r\n\tmakeTeam = (team) => {\r\n\t\tvar playerDisplay = team.map(player => (\r\n\t\t\t<div className={css(styles.playerDisplayContainer)}>\r\n\t\t\t\t<div className={css(styles.championIconContainer)}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName={css(styles.championIcon)}\r\n\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t'https://ddragon.leagueoflegends.com/cdn/' +\r\n\t\t\t\t\t\t\tthis.props.currentGameVersion + '/img/champion/' +\r\n\t\t\t\t\t\t\tthis.props.championData[`${player[0].championId}`].id +\r\n\t\t\t\t\t\t\t'.png'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{player[0].summonerName}\r\n\t\t\t\t</div>\r\n\t\t\t\t{[\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tthis.calcLosingStreak,\r\n\t\t\t\t\t\t'Number of games a player has lost consecutively with no greater than a 12 hour break between games.'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tthis.calcWinRate,\r\n\t\t\t\t\t\t'Winrate in ranked games played this season.'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tthis.calcMasteryPoints,\r\n\t\t\t\t\t\t'Mastery points on the currently played champion.'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tthis.calcLastPlayed,\r\n\t\t\t\t\t\t'The last time the player used their current champion.'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tthis.calcAggression,\r\n\t\t\t\t\t\t'A percentile representing how aggressive a player is on their current champion compared to other players on the same champion. A low aggression Darius may still be somewhat aggressive and a highly aggressive Soraka may still be somewhat passive.'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tthis.calcWarding,\r\n\t\t\t\t\t\t'A percentile representing how effectively a player wards on their current champion compared to other players on the same champion. A low warding Janna may still place more wards than the average player, because Jannas tend to ward a lot.'\r\n\t\t\t\t\t],\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\tthis.calcTiltScore,\r\n\t\t\t\t\t\t'An aggregate of all data collected into a score representing the likely benefit of camping/focusing this player.'\r\n\t\t\t\t\t],\r\n\t\t\t\t].map((data, i) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={css(styles.field)}\r\n\t\t\t\t\t\tstyle={{ backgroundColor: i % 2 == 0 ? theme('primary2', this.props.theme) : null }}\r\n\t\t\t\t\t\tonMouseEnter={(e) => this.setState({ popupText: data[1] })}\r\n\t\t\t\t\t\tonMouseLeave={() => this.setState({ popupText: null })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{data[0](player)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t))\r\n\r\n\t\tvar titles = [\r\n\t\t\t'Losing Streak',\r\n\t\t\t'Ranked Win Rate',\r\n\t\t\t'Mastery Points',\r\n\t\t\t'Last Played',\r\n\t\t\t'Aggression',\r\n\t\t\t'Warding',\r\n\t\t\t'Tilt Score'\r\n\t\t].map((title, i) => (\r\n\t\t\t<div className={css(styles.fieldTitle)} style={{ backgroundColor: i % 2 == 0 ? theme('primary2', this.props.theme) : null }}>\r\n\t\t\t\t{title}\r\n\t\t\t</div>\r\n\t\t))\r\n\r\n\t\tvar dmgMagic = 0\r\n\t\tvar dmgPhysical = 0\r\n\t\tvar dmgTrue = 0\r\n\t\tvar dmgTotal = 0\r\n\r\n\t\tteam.map(player => {\r\n\t\t\tdmgMagic += this.props.championStats[player[0].championId].magicDamageDealtToChampionPerSecsAvg\r\n\t\t\tdmgPhysical += this.props.championStats[player[0].championId].physicalDamageDealtToChampionsPerSecAvg\r\n\t\t\tdmgTrue += this.props.championStats[player[0].championId].trueDamageDealtToChampionsPerSecAvg\r\n\t\t\tdmgTotal += this.props.championStats[player[0].championId].magicDamageDealtToChampionPerSecsAvg\r\n\t\t\tdmgTotal += this.props.championStats[player[0].championId].physicalDamageDealtToChampionsPerSecAvg\r\n\t\t\tdmgTotal += this.props.championStats[player[0].championId].trueDamageDealtToChampionsPerSecAvg\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={css(styles.teamContainer)}\r\n\t\t\t\tonMouseMove={e => {\r\n\t\t\t\t\tthis.setState({ mouseX: e.pageX + 3, mouseY: e.pageY + 20 })\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={css(styles.infoBoxContainer)}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttop: this.state.mouseY,\r\n\t\t\t\t\t\tleft: this.state.mouseX,\r\n\t\t\t\t\t\tdisplay: this.state.popupText ? 'flex' : 'none'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={css(styles.infoBox)}>\r\n\t\t\t\t\t\t{this.state.popupText}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ flex: 1 }}/>\r\n\t\t\t\t<div className={css(styles.teamWrapper)}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={css(styles.teamSide)}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcolor: team.length > 0 ? (team[0][0].teamId == 100 ? theme('accent3', this.props.theme) : theme('accent4', this.props.theme)) : '',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{team.length > 0 ? (team[0][0].teamId == 100 ? 'BLUE SIDE' : 'RED SIDE') : ''}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={css(styles.damageContainer)}>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={css(styles.damageBarComponent)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tflex: dmgMagic/dmgTotal,\r\n\t\t\t\t\t\t\t\tbackgroundColor: theme('accent3', this.props.theme),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{`${(100*dmgMagic/dmgTotal).toFixed(1)}% AP`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={css(styles.damageBarComponent)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tflex: dmgPhysical/dmgTotal,\r\n\t\t\t\t\t\t\t\tbackgroundColor: theme('accent4', this.props.theme),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{`${(100*dmgPhysical/dmgTotal).toFixed(1)}% AD`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={css(styles.damageBarComponent)}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tflex: dmgTrue/dmgTotal,\r\n\t\t\t\t\t\t\t\tbackgroundColor: '#fbfbfb',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{`${(100*dmgTrue/dmgTotal).toFixed(1)}%`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={css(styles.fieldsContainer)}>\r\n\t\t\t\t\t\t<div style={{ width: 105 }}/>\r\n\t\t\t\t\t\t{titles}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{playerDisplay}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ flex: 2 }}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\r\n\t\tvar team1 = this.props.currentGame.participants.map((participant, index) => {\r\n\t\t\treturn [participant, index]\r\n\t\t}).filter(participant => participant[0].teamId == 100)\r\n\t\tvar team2 = this.props.currentGame.participants.map((participant, index) => {\r\n\t\t\treturn [participant, index]\r\n\t\t}).filter(participant => participant[0].teamId == 200)\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className={css(styles.dataDisplayContainer)}>\r\n\t\t\t\t{this.makeTeam(team1)}\r\n\t\t\t\t{this.makeTeam(team2)}\r\n\t    </div>\r\n\t  );\r\n\t}\r\n}\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tflex: 1,\r\n\t\t\talignItems: 'center',\r\n\t  },\r\n\t\tcontainerDesktop: {\r\n\t\t\tbackgroundColor: 'rgba(0.5,0.5,0.5,0.01)',\r\n\t\t\tuserSelect: 'none',\r\n\t\t},\r\n\t\tloadingText: {\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tmarginTop: 200,\r\n\t\t\tmarginBottom: 50,\r\n\t\t\t...FontSize.large,\r\n\t\t},\r\n\t\terrContainer: {\r\n\t\t\tmargin: '200px 20px 50px 20px',\r\n\t\t\tborderRadius: 20,\r\n\t\t\tborderWidth: 8,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderColor: theme('accent1', t, true),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, border-color 0.25s',\r\n\t\t},\r\n\t\terrText: {\r\n\t\t\t...FontSize.large,\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\tpadding: '40px 25px',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, border-color 0.25s',\r\n\t\t},\r\n\t\ttryAgainButton: {\r\n\t\t\tborderRadius: 5,\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderColor: theme('accent1', t, true),\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, border-color 0.25s',\r\n\t\t\t':hover': {\r\n\t\t\t\tborderColor: theme('inputHighlight2', t, true),\r\n\t\t\t\tbackgroundColor: theme('inputHighlightBackground', t),\r\n\t\t\t\tcursor: 'pointer',\r\n\t\t\t},\r\n\t\t},\r\n\t\ttryAgainText: {\r\n\t\t\t...FontSize.medium,\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\tpadding: '10px 15px',\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, border-color 0.25s',\r\n\t\t},\r\n\t\tdataDisplayContainer: {\r\n\t\t\t...FontSize.mediumSmall,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignSelf: 'stretch',\r\n\t\t\tflex: 1,\r\n\t\t\tflexWrap: 'wrap',\r\n\t\t\tjustifyContent: 'space-evenly',\r\n\t\t},\r\n\t\tteamContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\t...ItemSize.large,\r\n\t\t\tjustifyContent: 'center',\r\n\t\t},\r\n\t\tteamWrapper: {\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderWidth: 5,\r\n\t\t\tborderRadius: 10,\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tmarginTop: 25,\r\n\t\t},\r\n\t\tplayerDisplayContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\theight: '8vh',\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderWidth: '2px 0px 0px 0px',\r\n\t\t},\r\n\t\tchampionIconContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\twordBreak: 'break-all',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\theight: '8vh',\r\n\t\t\twidth: 105,\r\n\t\t\t...FontSize.small,\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t},\r\n\t\tchampionIcon: {\r\n\t\t\theight: '5vh',\r\n\t\t\twidth: '5vh',\r\n\t\t\tborderRadius: 5,\r\n\t\t},\r\n\t\tfieldsContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\theight: 50,\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderWidth: '2px 0px 0px 0px',\r\n\t\t},\r\n\t\tfieldTitle: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflex: 1,\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\twordBreak: 'break-word',\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tmarginTop: 0.5,\r\n\t\t},\r\n\t\tfield: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflex: 1,\r\n\t\t\tpadding: '0px 8px',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\ttextAlign: 'center',\r\n\t\t\twordBreak: 'break-word',\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tmarginTop: 0.5,\r\n\t\t},\r\n\t\tdamageContainer: {\r\n\t\t\theight: 18,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tmargin: '0px 20px 20px 20px',\r\n\t\t\tborderRadius: 10,\r\n\t\t\toverflow: 'hidden',\r\n\t\t},\r\n\t\tdamageBarComponent: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tpaddingBottom: 2,\r\n\t\t},\r\n\t\tteamSide: {\r\n\t\t\t...FontSize.extraLarge,\r\n\t\t\tfontFamily: 'Alegreya Sans',\r\n\t\t\tfontWeight: 600,\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tmarginTop: 10,\r\n\t\t\tmarginBottom: 10,\r\n\t\t},\r\n\t\tinfoBoxContainer: {\r\n\t\t\tposition: 'absolute',\r\n\t\t\twidth: 250,\r\n\t\t\tmarginLeft: -125,\r\n\t\t\talignItems: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tboxShadow: '0px 0px 3px ' + theme('inputHighlight', t, true),\r\n\t\t\tborderRadius: 10,\r\n\t\t},\r\n\t\tinfoBox: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\tmaxWidth: 250,\r\n\t\t\tborderRadius: 10,\r\n\t\t\tpadding: 10,\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\ttransition: 'background-color 0.25s, border-color 0.25s, color 0.25s',\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderWidth: 2,\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\nexport default withRouter(Tiltseek);\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\pages\\CompChecker.js",["108","109","110","111","112","113","114","115","116","117","118","119"],"import React from 'react'\r\nimport { StyleSheet, css } from 'aphrodite'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport axios from 'axios'\r\nimport axiosRetry from 'axios-retry';\r\n\r\nimport { FontSize, ItemSize, theme } from '../Styling.js'\r\n\r\nimport WinRateCalc from '../utils/WinRateCalc'\r\n\r\naxiosRetry(axios, {\r\n\tretries: 3,\r\n\tretryDelay: axiosRetry.exponentialDelay,\r\n});\r\n\r\n\r\nclass CompChecker extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tstats: null,\r\n\t\t\tchampionData: null,\r\n\t\t\tchampionDataUnfilled: null,\r\n\t\t\tcurrentGameVersion: null,\r\n\t\t\tloadingProgress: 'inProgress',\r\n\t\t\tinputStates: {},\r\n\t\t\tinputTexts: {},\r\n\t\t\thighlightIndex: 0,\r\n\t\t}\r\n\t\tthis.inputs = {}\r\n\t\tthis.highlightedChamp = null\r\n\t}\r\n\r\n\tasync componentWillMount() {\r\n\t\ttry {\r\n\t\t\tvar currentGameVersion = (await axios.get('https://ddragon.leagueoflegends.com/api/versions.json')).data[0]\r\n\r\n\t\t\tvar championDataUnfilled = (await axios.get(`https://ddragon.leagueoflegends.com/cdn/${currentGameVersion}/data/en_US/champion.json`)).data.data\r\n\t\t\tvar championData = JSON.parse(JSON.stringify(championDataUnfilled))\r\n\r\n\r\n\t\t\tfor (var champ of Object.keys(championData)) {\r\n\t\t\t\tchampionData[championData[champ].key] = championData[champ]\r\n\t\t\t\tchampionData[championData[champ].name] = championData[champ]\r\n\t\t\t}\r\n\r\n\t\t\tvar stats = (await this.props.axios.get('/stats')).data\r\n\r\n\t\t\tconsole.log(stats)\r\n\t\t\tconsole.log(championData)\r\n\r\n\t\t\tvar loadingProgress = 'complete'\r\n\t\t\tthis.setState({ stats, championData, currentGameVersion, championDataUnfilled, loadingProgress })\r\n\t\t} catch {\r\n\t\t\tthis.setState({ loadingProgress: 'fail' })\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\r\n\t\tif (this.state.loadingProgress == 'complete') {\r\n\t\t\tvar probabilityInput = {\r\n\t\t\t\tallyTeam: {\r\n\t\t\t\t\tpicks: {}\r\n\t\t\t\t},\r\n\t\t\t\topponentTeam: {\r\n\t\t\t\t\tpicks: {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tObject.entries(this.inputs).forEach(entry => {\r\n\t\t\t\tvar num = parseInt(entry[0])\r\n\t\t\t\tvar champStr = entry[1].value\r\n\t\t\t\tvar champ = this.state.championData[champStr]\r\n\t\r\n\t\t\t\tif (champ) {\r\n\t\t\t\t\tprobabilityInput[num < 5 ? 'allyTeam' : 'opponentTeam']['picks'][num] = { championId: champ.key }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\r\n\t\t\tvar probabilityData = WinRateCalc.calcProbability(probabilityInput, this.state.stats)\r\n\t\t\tvar winRate = probabilityData.probability || 0.5\r\n\t\t\tvar totalSamples = probabilityData.totalSamples\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\t<div className={css(styles.container)}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={css(styles.inputsContainer)}\r\n\t\t\t\t\t\tonKeyDown={e => {\r\n\t\t\t\t\t\t\tswitch (e.keyCode) {\r\n\t\t\t\t\t\t\t\tcase 38: // up arrow\r\n\t\t\t\t\t\t\t\t\tthis.setState({ highlightIndex: this.state.highlightIndex - 1 })\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\tcase 40: // down arrow\r\n\t\t\t\t\t\t\t\t\tthis.setState({ highlightIndex: this.state.highlightIndex + 1 })\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\tcase 13: // enter key\r\n\t\t\t\t\t\t\t\t\tvar position = Object.entries(this.state.inputStates).filter(entry => entry[1] == 'focused')[0][0]\r\n\t\t\t\t\t\t\t\t\tif (this.highlightedChamp) {\r\n\t\t\t\t\t\t\t\t\t\tthis.inputs[position].value = this.highlightedChamp.name\r\n\t\t\t\t\t\t\t\t\t\tthis.inputs[position].blur()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ [0,1].map(team => (\r\n\t\t\t\t\t\t\t<div className={css(styles.teamContainer)}>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={css(styles.percentageText)}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: team == 0 ? theme('accent3', this.props.theme) : theme('accent4', this.props.theme),\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{((team == 0 ? winRate : 1 - winRate ) * 100).toFixed(1) + '%'}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{Array.range(0 + 5 * team, 5 + 5 * team).map(i => (\r\n\t\t\t\t\t\t\t\t\t<div className={css(styles.inputContainer)}>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={css(styles.input)}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tref={me => this.inputs[i] = me}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={this.state.championData[this.inputs[i] && this.inputs[i].value] ? {\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: `url('https://ddragon.leagueoflegends.com/cdn/${this.state.currentGameVersion}/img/champion/${this.state.championData[this.inputs[i].value].id}.png') 4px 3px/34px 34px no-repeat scroll`,\r\n\t\t\t\t\t\t\t\t\t\t\t} : {}}\r\n\t\t\t\t\t\t\t\t\t\t\tonFocus={e => this.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\tinputStates: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.inputStates,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[i]: 'focused',\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\thighlightIndex: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\tonBlur={e => setTimeout(() => this.setState({ inputStates: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t...this.state.inputStates,\r\n\t\t\t\t\t\t\t\t\t\t\t\t[i]: 'blurred',\r\n\t\t\t\t\t\t\t\t\t\t\t}}), 100)}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={\r\n\t\t\t\t\t\t\t\t\t\t\t\ttext => this.setState({ inputTexts: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.inputTexts,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[i]: this.inputs[i].value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t}})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{ this.state.inputStates[i] == 'focused' ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={css(styles.champListContainer)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ Object.values(this.state.championDataUnfilled).sort((a, b) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar searchStr = this.state.inputTexts[i] ? this.state.inputTexts[i].toLowerCase() : ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar scores = [a, b].map(champ => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar targetStr = champ.name.toLowerCase()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar score = 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar startsWithCounter = 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (targetStr.startsWith(searchStr.slice(0, startsWithCounter)) && startsWithCounter < searchStr.length + 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartsWithCounter += 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscore += startsWithCounter * 10\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsearchStr.split('').forEach(searchChar => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttargetStr.split('').forEach(targetChar => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (searchChar == targetChar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscore += 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (targetStr.includes(searchStr)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscore += 100\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn score\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn scores[1] - scores[0]\r\n\t\t\t\t\t\t\t\t\t\t\t\t}).map((champ, j) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.highlightIndex == j) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.highlightedChamp = champ\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={css(styles.champListItem)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.inputs[i].value = champ.name\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={this.state.highlightIndex == j ? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: theme('accent1', this.props.theme)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} : {}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img className={css(styles.champListPic)} src={`https://ddragon.leagueoflegends.com/cdn/${this.state.currentGameVersion}/img/champion/${champ.id}.png`}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{champ.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{`${totalSamples} matches used in calculation`}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (this.state.loadingProgress == 'fail') {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={css(styles.container)}>\r\n\t\t\t\t\t{'Failed to load'}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={css(styles.container)}/>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tcontainer: {\r\n\t\t\tbackgroundColor: theme('bg1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tflex: 1,\r\n\t\t\talignItems: 'center',\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t},\r\n\t\tinputsContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\twidth: '100%',\r\n\t\t\tmargin: 20,\r\n\t\t\tmaxWidth: 1200,\r\n\t\t\tgridTemplateColumns: 'repeat(5, 20% [col-start])',\r\n\t\t},\r\n\t\tteamContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tflex: 1,\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tmargin: 10,\r\n\t\t},\r\n\t\tpercentageText: {\r\n\t\t\t...FontSize.medium,\r\n\t\t},\r\n\t\tinputContainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tflex: 1,\r\n\t\t\twidth: '100%',\r\n\t\t\tmargin: 15,\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tbackgroundColor: theme('inputHighlightBackground', t),\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\ttextAlign: 'center',\r\n\t\t\toutline: 'none',\r\n\t\t\tborderWidth: 2,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tfontFamily: 'Montserrat',\r\n\t\t\tborderColor: theme('inputHighlight', t, true),\r\n\t\t\tborderRadius: 5,\r\n\t\t\twidth: '50vw',\r\n\t\t\tmaxWidth: 350,\r\n\t\t\theight: 40,\r\n\t\t\tpadding: 0,\r\n\t\t\tmargin: 0,\r\n\t\t\t...FontSize.mediumSmall,\r\n\t\t},\r\n\t\tchampListContainer: {\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\tposition: 'absolute',\r\n\t\t\twidth: '50vw',\r\n\t\t\tmaxWidth: 350,\r\n\t\t\tflex: 1,\r\n\t\t\theight: 300,\r\n\t\t\toverflowY: 'scroll',\r\n\t\t\tmarginTop: 45,\r\n\t\t},\r\n\t\tchampListItem: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tmargin: '2px 0px',\r\n\t\t\tcolor: theme('text1', t),\r\n\t\t\tcursor: 'pointer',\r\n\t\t\t':hover': {\r\n\t\t\t\tbackgroundColor: theme('accent1', t),\r\n\t\t\t},\r\n\t\t},\r\n\t\tchampListPic: {\r\n\t\t\twidth: 30,\r\n\t\t\theight: 30,\r\n\t\t\tmarginRight: 5,\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\nexport default withRouter(CompChecker);\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\components\\ProgressBar.js",["120","121","122","123"],"import React from 'react'\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { FontSize, theme } from './../Styling.js';\r\n\r\n\r\nclass ProgressBar extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\r\n\trender() {\r\n\t\tloadStyles(this.props.theme)\r\n\t\treturn (\r\n\t\t\t<div className={css(styles.progressBarContainer)}>\r\n\t\t\t\t<div className={css(styles.progressBar)} style={{ width: this.props.percent*100 + '%' }}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nvar styles = null;\r\n\r\nvar loadStyles = (t) => {\r\n\tstyles = StyleSheet.create({\r\n\t\tprogressBarContainer: {\r\n\t\t\tbackgroundColor: theme('primary1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s',\r\n\t\t\twidth: '80%',\r\n\t\t\theight: 20,\r\n\t\t\tborderRadius: 10,\r\n\t\t\tpadding: 10,\r\n\t\t},\r\n\t\tprogressBar: {\r\n\t\t\tbackgroundColor: theme('text1', t),\r\n\t\t\ttransition: 'background-color 0.25s, color 0.25s, width 2.5s ease-out',\r\n\t\t\theight: '100%',\r\n\t\t\tborderRadius: 5,\r\n\t\t},\r\n\t});\r\n}\r\n\r\n\r\nexport default ProgressBar;\r\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\Styling.js",["124"],"\nconst themes = {\n\tbg1: {\n\t\tlight: '#BBB',\n\t\tdark: '#686868',\n\t},\n\tprimary1: {\n\t\tlight: '#DDD',\n\t\tdark: '#333',\n\t},\n\tprimary2: {\n\t\tlight: '#D4D4D4',\n\t\tdark: '#3B3B3B',\n\t},\n\taccent1: {\n\t\tlight: '#BBB',\n\t\tdark: '#555',\n\t},\n\taccent2: {\n\t\tlight: '#C8C8C8',\n\t\tdark: '#181818',\n\t},\n\taccent3: {\n\t\tlight: '#2898fa',\n\t\tdark: '#2898fa',\n\t},\n\taccent4: {\n\t\tlight: '#fa3232',\n\t\tdark: '#fa3232',\n\t},\n\tinputHighlight: {\n\t\tlight: '#C8C8C8',\n\t\tdark: 'black',\n\t},\n\tinputHighlight2: {\n\t\tlight: '#EEE',\n\t\tdark: 'black',\n\t},\n\tbutton: {\n\t\tlight: '#AAA',\n\t\tdark: '#888',\n\t},\n\tbuttonAccent: {\n\t\tlight: 'white',\n\t\tdark: '#DDD',\n\t},\n\tbuttonHovered: {\n\t\tlight: '#EEE',\n\t\tdark: '#555',\n\t},\n\tbuttonHoveredAccent: {\n\t\tlight: '#EEE',\n\t\tdark: '#EEE',\n\t},\n\tbuttonPressed: {\n\t\tlight: 'white',\n\t\tdark: '#222',\n\t},\n\tinputHighlightBackground: {\n\t\tlight: '#EAEAEA',\n\t\tdark: '#333',\n\t},\n\ttext1: {\n\t\tlight: '#0C0C0C',\n\t\tdark: '#F3F3F3',\n\t},\n\ttext2: {\n\t\tlight: 'white',\n\t\tdark: 'black',\n\t}\n}\n\nconst FontSize = {\n\tsmall: {\n\t\tfontSize: 8,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 10,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 12,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 13,\n\t\t},\n\t},\n\tmediumSmall: {\n\t\tfontSize: 8,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 12,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 14,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 16,\n\t\t},\n\t},\n\tmedium: {\n\t\tfontSize: 12,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 15,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 18,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t},\n\tmediumLarge: {\n\t\tfontSize: 15,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 18,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 23,\n\t\t},\n\t},\n\tlarge: {\n\t\tfontSize: 18,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 24,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 27,\n\t\t},\n\t},\n\textraLarge: {\n\t\tfontSize: 22,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 25,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 29,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 32,\n\t\t},\n\t},\n\tlogo: {\n\t\tfontSize: 70,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 100,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 130,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 160,\n\t\t},\n\t},\n};\n\nconst InputSize = {\n\tsmall: {\n\t\theight: 20,\n\t\t'@media (min-width: 600px)': {\n\t\t\theight: 20,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\theight: 20,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\theight: 20,\n\t\t},\n\t},\n\tmedium: {\n\t\tfontSize: 12,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 15,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 18,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t},\n\tmediumLarge: {\n\t\tfontSize: 15,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 18,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 23,\n\t\t},\n\t},\n\tlarge: {\n\t\tfontSize: 18,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 21,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 24,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 27,\n\t\t},\n\t},\n\tlogo: {\n\t\tfontSize: 70,\n\t\t'@media (min-width: 600px)': {\n\t\t\tfontSize: 100,\n\t\t},\n\t\t'@media (min-width: 800px)': {\n\t\t\tfontSize: 130,\n\t\t},\n\t\t'@media (min-width: 1000px)': {\n\t\t\tfontSize: 160,\n\t\t},\n\t},\n};\n\nconst ItemSize = {\n\tlarge: {\n\t\tminWidth: '90%',\n\t\t'@media (min-width: 1100px)': {\n\t\t\tminWidth: '80%',\n\t\t},\n\t\t'@media (min-width: 1350px)': {\n\t\t\tminWidth: '45%',\n\t\t\tmaxWidth: '45%',\n\t\t},\n\t\t'@media (min-width: 1550px)': {\n\t\t\tminWidth: '40%',\n\t\t\tmaxWidth: '40%',\n\t\t},\n\t},\n};\n\nconst theme = (key, type, invert=false) => {\n\tif (!invert) {\n\t\treturn themes[key][type]\n\t}\telse {\n\t\treturn themes[key][type === 'dark' ? 'light' : 'dark']\n\t}\n}\n\nexport { theme, FontSize, ItemSize }\n","C:\\Users\\Dimitrie\\Documents\\Dimitrie\\Tiltseeker\\Tiltseeker_v2.0\\tiltseeker\\src\\utils\\WinRateCalc.js",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"\r\nclass WinRateCalc {\r\n\r\n\tstatic normalize(x) {\r\n\t\treturn x / ( 1 + Math.abs( 5 * x ) ) + 0.5\r\n\t}\r\n\r\n\tstatic calcProbability(picksAndBans, stats, compensateForWinrate) {\r\n\t\tvar { champStats, matchups } = stats\r\n\r\n\t\tvar teamChamps = Object.values(picksAndBans.allyTeam.picks).map(pick => {\r\n\t\t\treturn pick.championId\r\n\t\t})\r\n\r\n\t\tvar opponentChamps = Object.values(picksAndBans.opponentTeam.picks).map(pick => {\r\n\t\t\treturn pick.championId\r\n\t\t})\r\n\r\n\t\tvar probabilities = []\r\n\t\tvar totalSamples = 0\r\n\r\n\t\tvar minimumSamples = 1000\r\n\r\n\t\tfor (var [i, champA] of teamChamps.entries()) {\r\n\t\t\tfor (var champB of teamChamps.slice(i + 1)) {\r\n\t\t\t\tvar [a, b] = [champA, champB].sort((a, b) => a - b)\r\n\r\n\t\t\t\tvar wins = matchups[`${a}w${b}`]\r\n\t\t\t\tvar total = matchups[`${a}w${b}_total`]\r\n\r\n\t\t\t\tif (total > minimumSamples) {\r\n\t\t\t\t\ttotalSamples += total\r\n\t\t\t\t\tvar probability = wins/total\r\n\r\n\t\t\t\t\tif (compensateForWinrate) {\r\n\t\t\t\t\t\tvar champAWinRate = matchups[`${a}w${a}`]/matchups[`${a}w${a}_total`]\r\n\t\t\t\t\t\tvar champBWinRate = matchups[`${b}w${b}`]/matchups[`${b}w${b}_total`]\r\n\t\t\t\t\t\tvar avgWinRate = champAWinRate + champBWinRate - 1\r\n\r\n\t\t\t\t\t\tprobability -= avgWinRate\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprobabilities.push(probability)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var [i, champA] of opponentChamps.entries()) {\r\n\t\t\tfor (var champB of opponentChamps.slice(i + 1)) {\r\n\t\t\t\tvar [a, b] = [champA, champB].sort((a, b) => a - b)\r\n\r\n\t\t\t\tvar wins = matchups[`${a}w${b}`]\r\n\t\t\t\tvar total = matchups[`${a}w${b}_total`]\r\n\r\n\t\t\t\tif (total > minimumSamples) {\r\n\t\t\t\t\ttotalSamples += total\r\n\t\t\t\t\tvar probability = wins/total\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (compensateForWinrate) {\r\n\t\t\t\t\t\tvar champAWinRate = matchups[`${a}w${a}`]/matchups[`${a}w${a}_total`]\r\n\t\t\t\t\t\tvar champBWinRate = matchups[`${b}w${b}`]/matchups[`${b}w${b}_total`]\r\n\t\t\t\t\t\tvar avgWinRate = champAWinRate + champBWinRate - 1\r\n\r\n\t\t\t\t\t\tprobability -= avgWinRate\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprobabilities.push(1-probability)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var champA of teamChamps) {\r\n\t\t\tfor (var champB of opponentChamps) {\r\n\t\t\t\tvar [a, b] = [champA, champB].sort((a, b) => a - b)\r\n\r\n\t\t\t\tvar wins = matchups[`${a}v${b}`]\r\n\t\t\t\tvar total = matchups[`${a}v${b}_total`]\r\n\r\n\t\t\t\tif (total > minimumSamples) {\r\n\t\t\t\t\ttotalSamples += total\r\n\t\t\t\t\tvar probability = a == champA ? wins/total : 1 - wins/total\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (compensateForWinrate) {\r\n\t\t\t\t\t\tvar champAWinRateUncorrected = matchups[`${a}w${a}`]/matchups[`${a}w${a}_total`]\r\n\t\t\t\t\t\tvar champAWinRate = a == champA ? champAWinRateUncorrected : 1 - champAWinRateUncorrected\r\n\t\t\t\t\t\tvar champBWinRateUncorrected = matchups[`${b}w${b}`]/matchups[`${b}w${b}_total`]\r\n\t\t\t\t\t\tvar champBWinRate = a == champA ? 1 - champBWinRateUncorrected : champBWinRateUncorrected\r\n\t\t\t\t\t\tvar avgWinRate = champAWinRate + champBWinRate - 1\r\n\r\n\t\t\t\t\t\tprobability -= avgWinRate\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprobabilities.push(probability)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprobabilities = probabilities.filter(val => !isNaN(val))\r\n\r\n\t\t// console.log(probabilities.reduce((a,b) => a + (b - 0.5), 0))\r\n\t\t// console.log(probabilities)\r\n\t\treturn {\r\n\t\t\t// probability: probabilities.reduce((a,b) => a + b, 0)/probabilities.length,\r\n\t\t\tprobability: this.normalize(probabilities.reduce((a,b) => a + (b - 0.5), 0) / ( ( teamChamps.length + opponentChamps.length ) / 2 ) ),\r\n\t\t\ttotalSamples: totalSamples,\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic getWinRate(picksAndBans, stats, localPlayerCellId, potentialPicks, compensateForWinrate) {\r\n\t\tvar returnObj = {\r\n\t\t\t...this.calcProbability(picksAndBans, stats, compensateForWinrate),\r\n\t\t\toptions: {}\r\n\t\t}\r\n\t\tconsole.log(picksAndBans)\r\n\t\tconsole.log(returnObj.probability)\r\n\r\n\t\tpotentialPicks.forEach(champId => {\r\n\t\t\tvar modifiedPicksAndBans = JSON.parse(JSON.stringify(picksAndBans)) // the JSON stuff quickly makes a deep copy\r\n\t\t\tmodifiedPicksAndBans.allyTeam.picks[localPlayerCellId] = {\r\n\t\t\t\tchampionId: champId,\r\n\t\t\t\tcompleted: false,\r\n\t\t\t}\r\n\t\t\treturnObj.options[champId] = this.calcProbability(modifiedPicksAndBans, stats, compensateForWinrate)\r\n\t\t})\r\n\r\n\t\treturn returnObj\r\n\t}\r\n}\r\n\r\nexport default WinRateCalc",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":53,"column":30,"nodeType":"156","messageId":"157","endLine":53,"endColumn":32},{"ruleId":"158","severity":1,"message":"159","line":7,"column":10,"nodeType":"160","messageId":"161","endLine":7,"endColumn":18},{"ruleId":"158","severity":1,"message":"162","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":18},{"ruleId":"158","severity":1,"message":"163","line":11,"column":5,"nodeType":"160","messageId":"161","endLine":11,"endColumn":11},{"ruleId":"164","severity":1,"message":"165","line":96,"column":11,"nodeType":"166","endLine":96,"endColumn":163},{"ruleId":"158","severity":1,"message":"162","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":32,"column":6,"nodeType":"166","endLine":32,"endColumn":201},{"ruleId":"158","severity":1,"message":"162","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":18},{"ruleId":"158","severity":1,"message":"169","line":8,"column":8,"nodeType":"160","messageId":"161","endLine":8,"endColumn":18},{"ruleId":"154","severity":1,"message":"170","line":10,"column":49,"nodeType":"156","messageId":"157","endLine":10,"endColumn":51},{"ruleId":"154","severity":1,"message":"170","line":57,"column":31,"nodeType":"156","messageId":"157","endLine":57,"endColumn":33},{"ruleId":"158","severity":1,"message":"171","line":98,"column":14,"nodeType":"160","messageId":"161","endLine":98,"endColumn":15},{"ruleId":"172","severity":1,"message":"173","line":118,"column":8,"nodeType":"174","messageId":"175","endLine":118,"endColumn":9,"fix":"176"},{"ruleId":"172","severity":1,"message":"173","line":136,"column":8,"nodeType":"174","messageId":"175","endLine":136,"endColumn":9,"fix":"177"},{"ruleId":"178","severity":1,"message":"179","line":171,"column":33,"nodeType":"180","messageId":"181","endLine":183,"endColumn":8},{"ruleId":"158","severity":1,"message":"182","line":204,"column":17,"nodeType":"160","messageId":"161","endLine":204,"endColumn":28},{"ruleId":"154","severity":1,"message":"170","line":303,"column":24,"nodeType":"156","messageId":"157","endLine":303,"endColumn":26},{"ruleId":"154","severity":1,"message":"170","line":310,"column":42,"nodeType":"156","messageId":"157","endLine":310,"endColumn":44},{"ruleId":"154","severity":1,"message":"170","line":315,"column":24,"nodeType":"156","messageId":"157","endLine":315,"endColumn":26},{"ruleId":"154","severity":1,"message":"170","line":329,"column":24,"nodeType":"156","messageId":"157","endLine":329,"endColumn":26},{"ruleId":"154","severity":1,"message":"170","line":406,"column":42,"nodeType":"156","messageId":"157","endLine":406,"endColumn":44},{"ruleId":"154","severity":1,"message":"155","line":427,"column":12,"nodeType":"156","messageId":"157","endLine":427,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":427,"column":27,"nodeType":"156","messageId":"157","endLine":427,"endColumn":29},{"ruleId":"154","severity":1,"message":"170","line":458,"column":51,"nodeType":"156","messageId":"157","endLine":458,"endColumn":53},{"ruleId":"154","severity":1,"message":"170","line":479,"column":42,"nodeType":"156","messageId":"157","endLine":479,"endColumn":44},{"ruleId":"154","severity":1,"message":"170","line":511,"column":42,"nodeType":"156","messageId":"157","endLine":511,"endColumn":44},{"ruleId":"164","severity":1,"message":"165","line":574,"column":6,"nodeType":"166","endLine":582,"endColumn":8},{"ruleId":"154","severity":1,"message":"170","line":617,"column":39,"nodeType":"156","messageId":"157","endLine":617,"endColumn":41},{"ruleId":"154","severity":1,"message":"170","line":636,"column":76,"nodeType":"156","messageId":"157","endLine":636,"endColumn":78},{"ruleId":"183","severity":1,"message":"184","line":646,"column":19,"nodeType":"180","messageId":"185","endLine":646,"endColumn":21},{"ruleId":"154","severity":1,"message":"170","line":679,"column":52,"nodeType":"156","messageId":"157","endLine":679,"endColumn":54},{"ruleId":"154","severity":1,"message":"170","line":682,"column":45,"nodeType":"156","messageId":"157","endLine":682,"endColumn":47},{"ruleId":"154","severity":1,"message":"170","line":729,"column":50,"nodeType":"156","messageId":"157","endLine":729,"endColumn":52},{"ruleId":"154","severity":1,"message":"170","line":732,"column":50,"nodeType":"156","messageId":"157","endLine":732,"endColumn":52},{"ruleId":"158","severity":1,"message":"186","line":7,"column":20,"nodeType":"160","messageId":"161","endLine":7,"endColumn":28},{"ruleId":"154","severity":1,"message":"170","line":63,"column":34,"nodeType":"156","messageId":"157","endLine":63,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":92,"column":8,"nodeType":"189","messageId":"190","endLine":106,"endColumn":9},{"ruleId":"154","severity":1,"message":"170","line":100,"column":89,"nodeType":"156","messageId":"157","endLine":100,"endColumn":91},{"ruleId":"154","severity":1,"message":"170","line":114,"column":23,"nodeType":"156","messageId":"157","endLine":114,"endColumn":25},{"ruleId":"154","severity":1,"message":"170","line":117,"column":18,"nodeType":"156","messageId":"157","endLine":117,"endColumn":20},{"ruleId":"154","severity":1,"message":"170","line":146,"column":39,"nodeType":"156","messageId":"157","endLine":146,"endColumn":41},{"ruleId":"154","severity":1,"message":"170","line":160,"column":32,"nodeType":"156","messageId":"157","endLine":160,"endColumn":34},{"ruleId":"154","severity":1,"message":"170","line":174,"column":44,"nodeType":"156","messageId":"157","endLine":174,"endColumn":46},{"ruleId":"154","severity":1,"message":"170","line":183,"column":49,"nodeType":"156","messageId":"157","endLine":183,"endColumn":51},{"ruleId":"164","severity":1,"message":"165","line":187,"column":16,"nodeType":"166","endLine":187,"endColumn":169},{"ruleId":"154","severity":1,"message":"170","line":203,"column":41,"nodeType":"156","messageId":"157","endLine":203,"endColumn":43},{"ruleId":"158","severity":1,"message":"191","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":20},{"ruleId":"158","severity":1,"message":"192","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":18},{"ruleId":"193","severity":1,"message":"194","line":11,"column":2,"nodeType":"195","messageId":"196","endLine":13,"endColumn":3},{"ruleId":"158","severity":1,"message":"197","line":160,"column":7,"nodeType":"160","messageId":"161","endLine":160,"endColumn":16},{"ruleId":"158","severity":1,"message":"198","line":9,"column":9,"nodeType":"160","messageId":"161","endLine":9,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":48,"column":13,"nodeType":"160","messageId":"201","endLine":48,"endColumn":14},{"ruleId":"199","severity":1,"message":"202","line":48,"column":16,"nodeType":"160","messageId":"201","endLine":48,"endColumn":22},{"ruleId":"199","severity":1,"message":"203","line":49,"column":13,"nodeType":"160","messageId":"201","endLine":49,"endColumn":19},{"ruleId":"199","severity":1,"message":"204","line":50,"column":10,"nodeType":"160","messageId":"201","endLine":50,"endColumn":11},{"ruleId":"199","severity":1,"message":"205","line":50,"column":13,"nodeType":"160","messageId":"201","endLine":50,"endColumn":14},{"ruleId":"199","severity":1,"message":"206","line":52,"column":9,"nodeType":"160","messageId":"201","endLine":52,"endColumn":13},{"ruleId":"199","severity":1,"message":"207","line":53,"column":9,"nodeType":"160","messageId":"201","endLine":53,"endColumn":14},{"ruleId":"199","severity":1,"message":"208","line":57,"column":10,"nodeType":"160","messageId":"201","endLine":57,"endColumn":21},{"ruleId":"199","severity":1,"message":"209","line":60,"column":11,"nodeType":"160","messageId":"201","endLine":60,"endColumn":24},{"ruleId":"199","severity":1,"message":"210","line":61,"column":11,"nodeType":"160","messageId":"201","endLine":61,"endColumn":24},{"ruleId":"199","severity":1,"message":"211","line":62,"column":11,"nodeType":"160","messageId":"201","endLine":62,"endColumn":21},{"ruleId":"199","severity":1,"message":"202","line":72,"column":12,"nodeType":"160","messageId":"201","endLine":72,"endColumn":18},{"ruleId":"199","severity":1,"message":"203","line":73,"column":13,"nodeType":"160","messageId":"201","endLine":73,"endColumn":19},{"ruleId":"199","severity":1,"message":"204","line":74,"column":10,"nodeType":"160","messageId":"201","endLine":74,"endColumn":11},{"ruleId":"199","severity":1,"message":"205","line":74,"column":13,"nodeType":"160","messageId":"201","endLine":74,"endColumn":14},{"ruleId":"199","severity":1,"message":"206","line":76,"column":9,"nodeType":"160","messageId":"201","endLine":76,"endColumn":13},{"ruleId":"199","severity":1,"message":"207","line":77,"column":9,"nodeType":"160","messageId":"201","endLine":77,"endColumn":14},{"ruleId":"199","severity":1,"message":"208","line":81,"column":10,"nodeType":"160","messageId":"201","endLine":81,"endColumn":21},{"ruleId":"154","severity":1,"message":"170","line":81,"column":26,"nodeType":"156","messageId":"157","endLine":81,"endColumn":28},{"ruleId":"199","severity":1,"message":"209","line":85,"column":11,"nodeType":"160","messageId":"201","endLine":85,"endColumn":24},{"ruleId":"154","severity":1,"message":"170","line":85,"column":29,"nodeType":"156","messageId":"157","endLine":85,"endColumn":31},{"ruleId":"199","severity":1,"message":"210","line":87,"column":11,"nodeType":"160","messageId":"201","endLine":87,"endColumn":24},{"ruleId":"154","severity":1,"message":"170","line":87,"column":29,"nodeType":"156","messageId":"157","endLine":87,"endColumn":31},{"ruleId":"199","severity":1,"message":"211","line":88,"column":11,"nodeType":"160","messageId":"201","endLine":88,"endColumn":21},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'FontSize' is defined but never used.","Identifier","unusedVar","'profilePic' is defined but never used.","'stripe' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'axiosRetry' is defined but never used.","Expected '===' and instead saw '=='.","'i' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"214","text":"215"},{"range":"216","text":"215"},"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'match', 'match'.","ArrowFunctionExpression","unsafeRefs","'participant' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'ItemSize' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'withRouter' is defined but never used.","'FontAwesomeIcon' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'InputSize' is assigned a value but never used.","'champStats' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'champA' is already defined.","'champB' is already defined.","'a' is already defined.","'b' is already defined.","'wins' is already defined.","'total' is already defined.","'probability' is already defined.","'champAWinRate' is already defined.","'champBWinRate' is already defined.","'avgWinRate' is already defined.","no-global-assign","no-unsafe-negation",[3696,3704],"\r\n\t\t\t\t\t.",[4173,4181]]